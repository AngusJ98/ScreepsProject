{"code":"import { bodyCost } from \"Creep_Setups/CreepSetup\";\r\nimport { Roles, Setups } from \"Creep_Setups/Setups\";\r\nimport { Manager } from \"Manager\";\r\nimport { ManagerPriority } from \"./ManagerPriority\";\r\nexport const MINER_COST = bodyCost(Setups.drones.miners.standard.generateBody(Infinity));\r\nexport const DOUBLE_COST = bodyCost(Setups.drones.miners.double.generateBody(Infinity));\r\nexport class MiningManager extends Manager {\r\n    constructor(miningSite, priority = ManagerPriority.Capital.miner) {\r\n        super(miningSite, \"MineManager_\" + miningSite.source.id, priority);\r\n        this.dropMineUntilRCL = 3;\r\n        this.site = miningSite;\r\n        this.container = this.site.container;\r\n        this.link = this.site.link;\r\n        this.constructionSite = _.first(this.pos.findInRange(FIND_MY_CONSTRUCTION_SITES, 2));\r\n        this.miners = this.creepsByRole[Roles.drone];\r\n        if (this.room.controller && this.room.controller.my) {\r\n            this.energyPerTick = SOURCE_ENERGY_CAPACITY / ENERGY_REGEN_TIME;\r\n        }\r\n        else {\r\n            this.energyPerTick = SOURCE_ENERGY_NEUTRAL_CAPACITY / ENERGY_REGEN_TIME;\r\n        }\r\n        this.miningPowerNeeded = Math.ceil(this.energyPerTick / HARVEST_POWER) + 1;\r\n        if (this.capital.room.energyCapacityAvailable < MINER_COST) {\r\n            this.mode = \"Early\";\r\n            this.setup = Setups.drones.miners.emergency;\r\n        }\r\n        else if (this.site.link) {\r\n            this.mode = \"Link\";\r\n            this.setup = Setups.drones.miners.default;\r\n        }\r\n        else {\r\n            this.mode = \"Standard\";\r\n            this.setup = Setups.drones.miners.default;\r\n        } //TODO Add code for when we want double miners (saves cpu)\r\n        this.minersNeeded = Math.min(this.pos.getAdjacentPositions().length, Math.ceil(this.miningPowerNeeded / (this.setup.getBodyPotential(WORK, this.capital))));\r\n        this.isDropMining = this.capital.level < this.dropMineUntilRCL;\r\n        if (this.mode != \"Early\" && !this.isDropMining) {\r\n            if (this.container) {\r\n                this.harvestPos = this.container.pos;\r\n            }\r\n            else if (this.link) {\r\n                this.harvestPos = _.first(_.filter(this.pos.getAdjacentPositions(), r => r.getRangeTo(this.link) == 1));\r\n            }\r\n            else {\r\n                this.harvestPos = this.calculateContainerPos();\r\n            }\r\n        }\r\n    }\r\n    //calculates where the container should be put. If no barracks, just return the source position for miners to move to\r\n    calculateContainerPos() {\r\n        if (this.capital.barracks) {\r\n            let pathSearch = PathFinder.search(this.capital.coreSpawn.pos, this.site.source.pos);\r\n            return _.last(pathSearch.path);\r\n        }\r\n        else {\r\n            return _.first(this.site.source.pos.getAdjacentPositions());\r\n        }\r\n    }\r\n    addContainer() {\r\n        if (this.isDropMining) { //no container needed if we are still drop mining, not worth building one yet\r\n            return;\r\n        }\r\n        if (!this.container && !this.constructionSite) {\r\n            let res = this.calculateContainerPos().createConstructionSite(STRUCTURE_CONTAINER);\r\n            if (res != OK) {\r\n                console.log(\"No container could be built at \" + JSON.stringify(this.calculateContainerPos()));\r\n            }\r\n        }\r\n    }\r\n    earlyMiner(miner) {\r\n        if (miner.room != this.room) {\r\n            miner.travelTo(this.pos);\r\n            return;\r\n        }\r\n        if (this.container) {\r\n            if (this.container.hits < this.container.hitsMax && miner.store.energy >= Math.min(miner.carryCapacity, REPAIR_POWER * miner.getActiveBodyparts(WORK))) {\r\n                miner.goRepair(this.container);\r\n                return;\r\n            }\r\n            else {\r\n                if (miner.store.getFreeCapacity() > 0) {\r\n                    miner.goHarvest(this.site.source);\r\n                    return;\r\n                }\r\n                else {\r\n                    miner.goTransfer(this.container);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (this.constructionSite) {\r\n            if (miner.store.energy >= Math.min(miner.carryCapacity, BUILD_POWER * miner.getActiveBodyparts(WORK))) {\r\n                miner.goBuild(this.constructionSite);\r\n                return;\r\n            }\r\n            else {\r\n                miner.goHarvest(this.site.source);\r\n                return;\r\n            }\r\n        }\r\n        if (this.isDropMining) {\r\n            miner.goHarvest(this.site.source);\r\n            return;\r\n        }\r\n        return;\r\n    }\r\n    standardMiner(miner) {\r\n        if (!this.pos.inRangeTo(this.harvestPos, 0)) {\r\n            miner.travelTo(this.site.pos);\r\n        }\r\n        if (this.container) {\r\n            if (this.container.hits < this.container.hitsMax && miner.store.energy >= Math.min(miner.carryCapacity, REPAIR_POWER * miner.getActiveBodyparts(WORK))) {\r\n                miner.repair(this.container);\r\n                return;\r\n            }\r\n            else {\r\n                miner.harvest(this.site.source);\r\n                return;\r\n            }\r\n        }\r\n        if (this.constructionSite) {\r\n            if (miner.store.energy >= Math.min(miner.carryCapacity, BUILD_POWER * miner.getActiveBodyparts(WORK))) {\r\n                miner.build(this.constructionSite);\r\n                return;\r\n            }\r\n            else {\r\n                miner.harvest(this.site.source);\r\n                return;\r\n            }\r\n        }\r\n        if (this.isDropMining) {\r\n            miner.harvest(this.site.source);\r\n            return;\r\n        }\r\n        return;\r\n    }\r\n    handleMiner(miner) {\r\n        if (this.mode == \"Early\") {\r\n            if (!miner.pos.inRangeTo(this.pos, 1)) {\r\n                miner.moveTo(this.pos);\r\n            }\r\n        }\r\n        else if (this.harvestPos) {\r\n            if (!miner.pos.inRangeTo(this.pos, 1)) {\r\n                miner.moveTo(this.harvestPos);\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"No harvest spot? What went wrong\");\r\n        }\r\n        switch (this.mode) {\r\n            case \"Early\":\r\n                return this.earlyMiner(miner);\r\n            case \"Link\":\r\n                return; //this.linkMiner(miner); //TODO Link mining\r\n            case \"Standard\":\r\n                return this.standardMiner(miner);\r\n            case \"SK\":\r\n                return this.standardMiner(miner);\r\n            case \"Double\":\r\n                return this.standardMiner(miner);\r\n        }\r\n    }\r\n    init() {\r\n        this.spawnList(this.minersNeeded, this.setup);\r\n    }\r\n    run() {\r\n        for (let miner of this.miners) {\r\n            this.handleMiner(miner);\r\n        }\r\n        if (this.room && Game.time % 20 == 0) {\r\n            this.addContainer();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=MiningManager.js.map","references":["C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/MiningSite.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/CreepSetup.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/Setups.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Manager.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Rando_Functions.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Managers/ManagerPriority.ts"],"map":"{\"version\":3,\"file\":\"MiningManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Managers/MiningManager.ts\"],\"names\":[],\"mappings\":\"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\"}"}

{"code":"import { UpgradeManager } from \"Managers/UpgradeManager\";\r\nimport { maxBy } from \"Rando_Functions\";\r\nimport { Building } from \"./Building\";\r\nexport class UpgradeSite extends Building {\r\n    constructor(capital, controller) {\r\n        super(capital, controller);\r\n        this.controller = controller;\r\n        this.name = \"UpgradeSite_\" + controller.name;\r\n        this.manager = new UpgradeManager(this);\r\n        this.capital = capital;\r\n        this.container = _.first(_.filter(this.pos.findInRange(FIND_STRUCTURES, 2), r => r.structureType == STRUCTURE_CONTAINER));\r\n        this.link = _.first(_.filter(this.pos.findInRange(FIND_STRUCTURES, 2), r => r.structureType == STRUCTURE_LINK));\r\n        this.constructionSite = _.first(this.pos.findInRange(FIND_MY_CONSTRUCTION_SITES, 2));\r\n        if (this.container) {\r\n            this.capital.buildingsByContainer[this.container.id] = this;\r\n        }\r\n    }\r\n    buildContainerOrLink(type) {\r\n        if (this.link) { //Just in case we accidentally call this when we have a link already\r\n            return;\r\n        }\r\n        else { //finds the position 2 away with most adjacent spots to make pathing easier\r\n            let possiblePos = this.controller.pos.getAdjacentPositions(2);\r\n            let finalPos = maxBy(possiblePos, r => r.getAdjacentPositions().length);\r\n            finalPos.createConstructionSite(type);\r\n        }\r\n    }\r\n    init() {\r\n    }\r\n    run() {\r\n        if (this.room && Game.time % 20 == 0 && this.capital.level >= 3 && this.capital.storage && this.manager.upgraders && this.manager.upgraders.length > 0) {\r\n            this.buildContainerOrLink(STRUCTURE_CONTAINER);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=UpgradeSite.js.map","references":["C:/Users/zangu/OneDrive/Documents/GitHub/ScreepsProject/src/Managers/UpgradeManager.ts","C:/Users/zangu/OneDrive/Documents/GitHub/ScreepsProject/src/Rando_Functions.ts","C:/Users/zangu/OneDrive/Documents/GitHub/ScreepsProject/src/Room/Capital.ts","C:/Users/zangu/OneDrive/Documents/GitHub/ScreepsProject/src/Buildings/Building.ts"],"map":"{\"version\":3,\"file\":\"UpgradeSite.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Buildings/UpgradeSite.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AAExC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,MAAM,OAAO,WAAY,SAAQ,QAAQ;IAOrC,YAAY,OAAgB,EAAE,UAA8B;QACxD,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA;QAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,mBAAmB,CAAyB,CAAC,CAAA;QACjJ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,cAAc,CAAoB,CAAC,CAAA;QAClI,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC,CAAC;QAErF,IAAG,IAAI,CAAC,SAAS,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA;SAC9D;IACL,CAAC;IAED,oBAAoB,CAAC,IAA0C;QAC3D,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE,oEAAoE;YACjF,OAAM;SACT;aAAM,EAAE,2EAA2E;YAChF,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAA;YAC7D,IAAI,QAAQ,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,CAAA;YACvE,QAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAA;SACzC;IACL,CAAC;IAED,IAAI;IAEJ,CAAC;IAED,GAAG;QACC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACpJ,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;SAClD;IACL,CAAC;CACJ\"}"}

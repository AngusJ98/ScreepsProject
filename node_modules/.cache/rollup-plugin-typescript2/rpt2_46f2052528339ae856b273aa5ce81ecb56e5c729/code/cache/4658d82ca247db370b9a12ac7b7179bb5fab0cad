{"code":"import { Roles, Setups } from \"Creep_Setups/Setups\";\r\nimport { Manager } from \"Manager\";\r\nimport { maxBy } from \"Rando_Functions\";\r\nimport { ManagerPriority } from \"./ManagerPriority\";\r\n/**\r\n * This manager handles long range hauls for the capital. For intercapital trading, use a mission instead\r\n * This also moves energy from containers in reserved rooms\r\n *\r\n * No cool logistics system like ovemind, yet! TODO\r\n */\r\nexport class LorryManager extends Manager {\r\n    constructor(hq, prio = ManagerPriority.Lorry.lorry) {\r\n        var _a;\r\n        super(hq, \"LorryManager\" + hq.storage.id, prio);\r\n        this.lorryHQ = hq;\r\n        this.lorrys = this.creepsByRole[Roles.lorry] || [];\r\n        this.withdraw = [..._.filter(this.room.containers, r => r.store.energy > 0), ..._.filter(this.room.droppedEnergy, r => r.amount > 100)];\r\n        this.currentTargeted = _.filter(_.map(this.lorrys, r => r.memory.targetId ? Game.getObjectById(r.memory.targetId) : undefined), r => r instanceof StructureContainer || r instanceof Resource);\r\n        let filteredTargets = this.currentTargeted.filter(function (item, pos) {\r\n            return filteredTargets.lastIndexOf(item) == filteredTargets.indexOf(item);\r\n        }); //removes elements that are already being served by 2+ lorry\r\n        this.filteredTargets = filteredTargets;\r\n        this.transfers = _.filter(_.compact([(_a = this.capital.upgradeSite) === null || _a === void 0 ? void 0 : _a.container, this.capital.battery, this.room.terminal]), r => r.energy < r.energyCapacity);\r\n        if (this.capital.battery) {\r\n            _.remove(this.withdraw, this.capital.battery);\r\n        }\r\n    }\r\n    getAmount(ori) {\r\n        if (ori instanceof StructureContainer) {\r\n            return ori.store.energy;\r\n        }\r\n        else if (ori instanceof Resource) {\r\n            return ori.amount;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    transportPowerNeeded() {\r\n        let transportPower = 0;\r\n        for (let site of this.capital.miningSites) {\r\n            let manager = site.manager;\r\n            if (manager.miners.length >= 0 && manager.isDropMining) {\r\n                transportPower += manager.energyPerTick * 2 * PathFinder.search(site.pos, this.pos).path.length;\r\n            }\r\n        }\r\n        if (this.capital.upgradeSite && this.capital.upgradeSite.container) {\r\n            transportPower += UPGRADE_CONTROLLER_POWER * this.capital.upgradeSite.manager.powerNeeded * PathFinder.search(this.capital.upgradeSite.container.pos, this.pos).path.length;\r\n        }\r\n        return transportPower / 2;\r\n    }\r\n    handleLorry(lorry) {\r\n        if (lorry.memory.state == \"transfer\" && lorry.store.energy == 0) {\r\n            lorry.memory.state = \"withdraw\";\r\n            lorry.memory.targetId = undefined;\r\n        }\r\n        else if (lorry.memory.state == \"withdraw\" && lorry.store.getFreeCapacity() == 0) {\r\n            lorry.memory.state = \"transfer\";\r\n            lorry.memory.targetId = undefined;\r\n        }\r\n        else {\r\n            lorry.memory.state = \"withdraw\";\r\n            lorry.memory.targetId = undefined;\r\n        }\r\n        if (lorry.memory.state = \"withdraw\") {\r\n            if (lorry.memory.targetId) {\r\n                let target = Game.getObjectById(lorry.memory.targetId);\r\n                if (target && this.getAmount(target) > 0) {\r\n                    lorry.goWithdraw(target);\r\n                    return;\r\n                }\r\n            }\r\n            let target = maxBy(this.filteredTargets, r => this.getAmount(r));\r\n            if (target) {\r\n                lorry.memory.targetId = target.id;\r\n                lorry.goWithdraw(target);\r\n                return;\r\n            }\r\n            else {\r\n                target = maxBy(this.withdraw, r => this.getAmount(r));\r\n                if (target) {\r\n                    lorry.memory.targetId = target.id;\r\n                    lorry.goWithdraw(target);\r\n                    return;\r\n                }\r\n                else {\r\n                    lorry.say(\"No target :c\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (lorry.memory.targetId) {\r\n                let target = Game.getObjectById(lorry.memory.targetId);\r\n                if (target && this.getAmount(target) > 0) {\r\n                    lorry.goTransfer(target);\r\n                    return;\r\n                }\r\n            }\r\n            let target = _.first(_.filter(this.transfers, r => r.energy < 0.5 * r.store.getCapacity()));\r\n            if (target) {\r\n                lorry.memory.targetId = target.id;\r\n                lorry.goTransfer(target);\r\n                return;\r\n            }\r\n            target = _.first(_.filter(this.transfers, r => r.energy < 0.8 * r.store.getCapacity()));\r\n            if (target) {\r\n                lorry.memory.targetId = target.id;\r\n                lorry.goTransfer(target);\r\n                return;\r\n            }\r\n            target = _.first(this.transfers);\r\n            lorry.memory.targetId = target.id;\r\n            lorry.goTransfer(this.lorryHQ.storage);\r\n            return;\r\n        }\r\n    }\r\n    init() {\r\n        let setup = Setups.lorrys.early;\r\n        let needed = this.transportPowerNeeded();\r\n        let powerEach = setup.getBodyPotential(CARRY, this.capital);\r\n        let lorrysNeeded = Math.ceil(needed / powerEach);\r\n        if (this.lorrys.length == 0) {\r\n            this.spawnList(lorrysNeeded, setup, { priority: ManagerPriority.Capital.firstTransport });\r\n        }\r\n        else {\r\n            this.spawnList(lorrysNeeded, setup);\r\n        }\r\n    }\r\n    run() {\r\n        _.forEach(this.lorrys, r => this.handleLorry(r));\r\n    }\r\n}\r\n//# sourceMappingURL=LorryManager.js.map","references":["C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/Barracks.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/LorryHQ.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/Setups.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Manager.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Rando_Functions.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Managers/ManagerPriority.ts"],"map":"{\"version\":3,\"file\":\"LorryManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Managers/LorryManager.ts\"],\"names\":[],\"mappings\":\"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\"}"}

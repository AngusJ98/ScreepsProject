{"code":"export class CreepSetup {\r\n    constructor(role, bodysetup = {}) {\r\n        _.defaults(bodysetup, {\r\n            pattern: [],\r\n            sizeLimit: Infinity,\r\n            ordered: true,\r\n        });\r\n        this.role = role;\r\n        this.bodySetup = bodysetup;\r\n    }\r\n    //Calculates how bit a creep can be, and returns it.\r\n    getBodyPotential(partType, capital) {\r\n        let energyCapacity = capital.room.energyCapacityAvailable;\r\n        let body = this.generateBody(energyCapacity);\r\n        return _.filter(body, (part) => part == partType).length;\r\n    }\r\n    generateBody(availableEnergy) {\r\n        let patternCost, patternLength, numRepeats;\r\n        let body = [];\r\n        //calculate how big we can make a creep\r\n        patternCost = bodyCost(this.bodySetup.pattern);\r\n        patternLength = this.bodySetup.pattern.length;\r\n        let energyLimit = Math.floor(availableEnergy / patternCost);\r\n        let maxPartLimit = Math.floor(MAX_CREEP_SIZE / patternLength);\r\n        numRepeats = Math.min(energyLimit, maxPartLimit, this.bodySetup.sizeLimit);\r\n        if (this.bodySetup.ordered) { // repeated body pattern\r\n            for (let part of this.bodySetup.pattern) {\r\n                for (let i = 0; i < numRepeats; i++) {\r\n                    body.push(part);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < numRepeats; i++) {\r\n                body = body.concat(this.bodySetup.pattern);\r\n            }\r\n        }\r\n        return body;\r\n    }\r\n}\r\n//Calculates cost of a body\r\nexport function bodyCost(bodyparts) {\r\n    return _.sum(bodyparts, part => BODYPART_COST[part]);\r\n}\r\n//# sourceMappingURL=CreepSetup.js.map","references":["C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Room/Capital.ts"],"map":"{\"version\":3,\"file\":\"CreepSetup.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Creep_Setups/CreepSetup.ts\"],\"names\":[],\"mappings\":\"AAaA,MAAM,OAAO,UAAU;IAKnB,YAAY,IAAY,EAAE,SAAS,GAAG,EAAE;QACpC,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE;YAClB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,QAAQ;YACnB,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAsB,CAAC;IAC5C,CAAC;IAID,oDAAoD;IACpD,gBAAgB,CAAC,QAA0B,EAAE,OAAgB;QACzD,IAAI,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAA;QAC/D,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACvC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAsB,EAAE,EAAE,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,MAAM,CAAC;IAC/E,CAAC;IAGD,YAAY,CAAC,eAAuB;QAChC,IAAI,WAAW,EAAE,aAAa,EAAE,UAAkB,CAAC;QACnD,IAAI,IAAI,GAAuB,EAAE,CAAC;QAElC,uCAAuC;QACvC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC/C,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAA;QAC7C,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,WAAW,CAAC,CAAA;QAC3D,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,aAAa,CAAC,CAAA;QAC7D,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;QAE1E,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,wBAAwB;YAC3D,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAChB;aACD;SACD;aAAM;YACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aAC3C;SACK;QAED,OAAO,IAAI,CAAA;IAEf,CAAC;CACJ;AAED,2BAA2B;AAC3B,MAAM,UAAU,QAAQ,CAAC,SAA6B;IACrD,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;AACtD,CAAC\"}"}

{"code":"import { bodyCost } from \"Creep_Setups/CreepSetup\";\r\nimport { Roles, Setups } from \"Creep_Setups/Setups\";\r\nimport { Manager } from \"Manager\";\r\nimport { ManagerPriority } from \"./ManagerPriority\";\r\nexport const MINER_COST = bodyCost(Setups.drones.miners.standard.generateBody(Infinity));\r\nexport const DOUBLE_COST = bodyCost(Setups.drones.miners.double.generateBody(Infinity));\r\nexport class ExtractorManager extends Manager {\r\n    constructor(extractorSite, priority = ManagerPriority.Capital.miner) {\r\n        var _a;\r\n        super(extractorSite, \"ExtractorManager_\" + extractorSite.mineral.id, priority);\r\n        this.room = extractorSite.room;\r\n        this.site = extractorSite;\r\n        this.container = this.site.container;\r\n        this.link = this.site.link || undefined;\r\n        this.miners = this.creepsByRole[Roles.drone];\r\n        this.mineral = this.site.mineral;\r\n        this.extractor = this.site.extractor;\r\n        this.constructionSite = _.first(this.pos.findInRange(FIND_MY_CONSTRUCTION_SITES, 2));\r\n        this.energyPerTick = Math.max(_.sum(this.miners, r => r.getActiveBodyparts(WORK) * 2), Math.ceil((((_a = this.container) === null || _a === void 0 ? void 0 : _a.store.getUsedCapacity()) || 0) / 500));\r\n        if (this.container) {\r\n            this.harvestPos = this.container.pos;\r\n        }\r\n    }\r\n    //calculates where the container should be put. If no barracks, just return the source position for miners to move to\r\n    calculateContainerPos() {\r\n        return _.first(this.site.mineral.pos.getAdjacentPositions());\r\n    }\r\n    addContainer() {\r\n        if (!this.container && !this.constructionSite && this.capital.level >= 6) {\r\n            let res = this.calculateContainerPos().createConstructionSite(STRUCTURE_CONTAINER);\r\n            if (res != OK) {\r\n            }\r\n        }\r\n    }\r\n    addExtractor() {\r\n        if (!this.extractor && !this.constructionSite) {\r\n            let res = this.pos.createConstructionSite(STRUCTURE_EXTRACTOR);\r\n        }\r\n    }\r\n    handleMiner(miner) {\r\n        if (this.mineral.mineralAmount > 0 && this.container) {\r\n            if (!(miner.pos.inRangeTo(this.container.pos, 0))) {\r\n                miner.travelTo(this.container.pos);\r\n            }\r\n            else if (Game.time % EXTRACTOR_COOLDOWN == 0) {\r\n                miner.harvest(this.mineral);\r\n            }\r\n        }\r\n        else {\r\n            let spawn = miner.pos.findClosestByMultiRoomRange(this.capital.spawns);\r\n            if (spawn && miner.pos.getMultiRoomRangeTo(spawn.pos) > 1) {\r\n                miner.travelTo(spawn);\r\n            }\r\n            else if (spawn) {\r\n                spawn.recycleCreep(miner);\r\n            }\r\n            else {\r\n                miner.suicide();\r\n            }\r\n        }\r\n    }\r\n    init() {\r\n        let setup = Setups.drones.extractor;\r\n        if (this.container && this.extractor && this.room.hostiles.length == 0 && this.mineral.mineralAmount > 0) {\r\n            this.spawnList(1, setup);\r\n        }\r\n    }\r\n    run() {\r\n        //console.log(JSON.stringify(this.miners))\r\n        _.forEach(this.miners, r => this.handleMiner(r));\r\n        if (this.room && Game.time % 20 == 0) {\r\n            this.addContainer();\r\n            this.addExtractor();\r\n        }\r\n        //console.log(this.mode)\r\n        //console.log(JSON.stringify(this.container!.pos))\r\n    }\r\n}\r\n//# sourceMappingURL=ExtractorManager.js.map","references":["C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/ExtractorSite.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/MiningSite.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/CreepSetup.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/Setups.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Manager.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Rando_Functions.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Managers/ManagerPriority.ts"],"map":"{\"version\":3,\"file\":\"ExtractorManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Managers/ExtractorManager.ts\"],\"names\":[],\"mappings\":\"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\"}"}

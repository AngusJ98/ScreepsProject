{"code":"export function test2() {\r\n}\r\nObject.defineProperty(Room.prototype, 'storageUnits', {\r\n    get() {\r\n        if (!this._storageUnits) {\r\n            this._storageUnits = _.compact([this.storage, this.terminal]).concat(this.containers);\r\n        }\r\n        return this._storageUnits;\r\n    },\r\n});\r\nObject.defineProperty(Room.prototype, \"structures\", {\r\n    get() {\r\n        if (!this._structures) {\r\n            this._structures = _.groupBy(this.find(FIND_STRUCTURES), s => s.structureType);\r\n        }\r\n        return this._structures;\r\n    }\r\n});\r\nObject.defineProperty(Room.prototype, \"hostileStructsByType\", {\r\n    get() {\r\n        if (!this._structures) {\r\n            this._structures = _.groupBy(this.find(FIND_HOSTILE_STRUCTURES), s => s.structureType);\r\n        }\r\n        return this._structures;\r\n    }\r\n});\r\nObject.defineProperty(Room.prototype, 'my', {\r\n    get() {\r\n        return this.controller && this.controller.my;\r\n    },\r\n});\r\nObject.defineProperties(Room.prototype, {\r\n    hostiles: {\r\n        get() {\r\n            return this.find(FIND_HOSTILE_CREEPS);\r\n        }\r\n    },\r\n    hostileStructures: {\r\n        get() {\r\n            return this.find(FIND_HOSTILE_STRUCTURES);\r\n        }\r\n    },\r\n    drops: {\r\n        get() {\r\n            let resources = this.allDrops;\r\n            return _.groupBy(resources, r => r.resourceType);\r\n        }\r\n    },\r\n    minerals: {\r\n        get() {\r\n            return this.find(FIND_MINERALS);\r\n        }\r\n    },\r\n    tombstones: {\r\n        get() {\r\n            return this.find(FIND_TOMBSTONES);\r\n        }\r\n    },\r\n    allDrops: {\r\n        get() {\r\n            return this.find(FIND_DROPPED_RESOURCES);\r\n        }\r\n    },\r\n    // Dropped resources that are eneryg\r\n    droppedEnergy: {\r\n        get() {\r\n            return this.drops[RESOURCE_ENERGY] || [];\r\n        },\r\n    },\r\n    droppedMinerals: {\r\n        get() {\r\n            let minerals = [];\r\n            for (let resourceType in this.drops) {\r\n                if (resourceType != RESOURCE_ENERGY && resourceType != RESOURCE_POWER) {\r\n                    minerals = minerals.concat(this.drops[resourceType]);\r\n                }\r\n            }\r\n            return minerals;\r\n        },\r\n    },\r\n    droppedPower: {\r\n        get() {\r\n            return this.drops[RESOURCE_POWER] || [];\r\n        },\r\n    },\r\n    // Spawns in the room\r\n    spawns: {\r\n        get() {\r\n            return this.structures[STRUCTURE_SPAWN] || [];\r\n        },\r\n    },\r\n    // All extensions in room\r\n    extensions: {\r\n        get() {\r\n            return this.structures[STRUCTURE_EXTENSION] || [];\r\n        },\r\n    },\r\n    // All containers in the room\r\n    containers: {\r\n        get() {\r\n            return this.structures[STRUCTURE_CONTAINER] || [];\r\n        },\r\n    },\r\n    // Towers\r\n    towers: {\r\n        get() {\r\n            return this.structures[STRUCTURE_TOWER] || [];\r\n        },\r\n    },\r\n    // Links\r\n    links: {\r\n        get() {\r\n            return this.structures[STRUCTURE_LINK] || [];\r\n        },\r\n    },\r\n    // Labs\r\n    labs: {\r\n        get() {\r\n            return this.structures[STRUCTURE_LAB] || [];\r\n        },\r\n    },\r\n    // All energy sources\r\n    sources: {\r\n        get() {\r\n            return this.find(FIND_SOURCES) || [];\r\n        },\r\n    },\r\n    powerSpawn: {\r\n        get() {\r\n            return this.structures[STRUCTURE_POWER_SPAWN] ? this.structures[STRUCTURE_POWER_SPAWN][0] : undefined;\r\n        },\r\n    },\r\n    nuker: {\r\n        get() {\r\n            return this.structures[STRUCTURE_NUKER] ? this.structures[STRUCTURE_NUKER][0] : undefined;\r\n        },\r\n    },\r\n    observer: {\r\n        get() {\r\n            return this.structures[STRUCTURE_OBSERVER] ? this.structures[STRUCTURE_OBSERVER][0] : undefined;\r\n        },\r\n    },\r\n    // All non-barrier, non-road repairable objects\r\n    repairables: {\r\n        get() {\r\n            if (!this.structures['repairables']) {\r\n                let repairables = [];\r\n                for (let structureType in this.structures) {\r\n                    if (structureType != STRUCTURE_WALL &&\r\n                        structureType != STRUCTURE_RAMPART) {\r\n                        repairables = repairables.concat(this.structures[structureType]);\r\n                    }\r\n                }\r\n                this.structures['repairables'] = _.compact(_.flatten(repairables));\r\n            }\r\n            return this.structures['repairables'] || [];\r\n        },\r\n    },\r\n    // All containers in the room\r\n    roads: {\r\n        get() {\r\n            return this.structures[STRUCTURE_ROAD] || [];\r\n        },\r\n    },\r\n    // All construction sites\r\n    constructionSites: {\r\n        get() {\r\n            return this.find(FIND_CONSTRUCTION_SITES) || [];\r\n        },\r\n    },\r\n    // All construction sites for roads\r\n    roadSites: {\r\n        get() {\r\n            return this.structures[STRUCTURE_ROAD] || [];\r\n        },\r\n    },\r\n    // All walls and ramparts\r\n    barriers: {\r\n        get() {\r\n            if (!this.structures['barriers']) {\r\n                let barriers = [].concat(this.structures[STRUCTURE_WALL], this.structures[STRUCTURE_RAMPART]);\r\n                this.structures['barriers'] = _.compact(_.flatten(barriers));\r\n            }\r\n            return this.structures['barriers'] || [];\r\n        },\r\n    },\r\n});\r\n//# sourceMappingURL=Room_Find.js.map","references":[],"map":"{\"version\":3,\"file\":\"Room_Find.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Room/Room_Find.ts\"],\"names\":[],\"mappings\":\"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\"}"}

{"code":"import { Roles, Setups } from \"Creep_Setups/Setups\";\r\nimport { Manager } from \"Manager\";\r\nimport { ManagerPriority } from \"Managers/ManagerPriority\";\r\nimport { config } from \"config\";\r\nexport class SetupManager extends Manager {\r\n    constructor(mission, prio = ManagerPriority.Colonization.pioneer) {\r\n        super(mission.capital, \"SetupManager_\" + mission.name, prio);\r\n        this.barrierHits = {\r\n            1: 3e+3,\r\n            2: 3e+3,\r\n            3: 1e+4,\r\n            4: 5e+4,\r\n            5: 1e+5,\r\n            6: 5e+5,\r\n            7: 1e+6,\r\n            //8       : 1e+6,\r\n            8: 2e+7,\r\n        };\r\n        this.critical = 2500;\r\n        this.tolerance = 100000;\r\n        this.fortifyThreshold = 500000;\r\n        this.mission = mission;\r\n        this.pioneers = this.creepsByRole[Roles.colonist] || [];\r\n        this.setup = Setups.colonist;\r\n        this.room = mission.room;\r\n        this.hostileStructs = this.room.find(FIND_HOSTILE_STRUCTURES);\r\n        this.hostileSpawns = _.filter(this.hostileStructs, r => r.structureType == STRUCTURE_SPAWN);\r\n        this.hitsGoal = this.barrierHits[this.capital.level];\r\n        this.fortifyTargets = [];\r\n        this.criticalTargets = _.filter(this.fortifyTargets, r => r.hits < this.critical);\r\n        this.repairTargets = _.filter(_.compact(this.room.repairables), r => r.hits < 0.8 * r.hitsMax);\r\n        this.constructionSites = this.room.constructionSites;\r\n        this.deconstructTargets = this.hostileSpawns;\r\n    }\r\n    handlePioneer(pioneer) {\r\n        if (pioneer.room != this.mission.flag.room) {\r\n            pioneer.travelTo(this.mission.flag, { allowHostile: true, allowSK: true, maxRooms: 500, ensurePath: true });\r\n            return;\r\n        }\r\n        let source = pioneer.pos.findClosestByPath(_.filter(this.room.sources, r => r.energy > 0));\r\n        let distance = source ? pioneer.pos.getMultiRoomRangeTo(source.pos) : Infinity;\r\n        if (this.deconstructTargets.length > 0) {\r\n            if (this.deconstructActions(pioneer)) {\r\n                pioneer.say(\"Deconstructing!\");\r\n                return;\r\n            }\r\n        }\r\n        let drops = _.filter(pioneer.room.droppedEnergy, r => r.amount >= pioneer.store.getCapacity() / 4);\r\n        let structs = _.filter(pioneer.room.storageUnits, r => r.store.energy >= pioneer.store.getCapacity() / 4);\r\n        let targets = _.merge(drops, structs);\r\n        //console.log(JSON.stringify(this.room.drops))\r\n        let target = pioneer.pos.findClosestByMultiRoomRange(targets);\r\n        if (target && pioneer.store.getUsedCapacity() == 0) {\r\n            pioneer.goWithdraw(target);\r\n        }\r\n        else {\r\n            if (distance <= 1 && pioneer.store.getFreeCapacity() > 0) {\r\n                pioneer.say(\"I mine\");\r\n                pioneer.goHarvest(source);\r\n            }\r\n            else if (pioneer.store.getUsedCapacity() == 0) {\r\n                pioneer.say(\"I go\");\r\n                if (source) {\r\n                    pioneer.goHarvest(source, { ensurePath: true, repath: 3 });\r\n                }\r\n            }\r\n            else {\r\n                this.workActions(pioneer);\r\n            }\r\n        }\r\n    }\r\n    workActions(pioneer) {\r\n        if (this.capital.controller.ticksToDowngrade <= (this.capital.level >= 4 ? 8000 : 2000)) {\r\n            if (this.upgradeActions(pioneer)) {\r\n                pioneer.say(\"Upgrading!\");\r\n                return;\r\n            }\r\n        }\r\n        // Fortify critical barriers\r\n        if (this.criticalTargets.length > 0) {\r\n            if (this.fortifyActions(pioneer, this.criticalTargets)) {\r\n                pioneer.say(\"Fortifying!\");\r\n                return;\r\n            }\r\n        }\r\n        // Build new structures\r\n        if (this.constructionSites.length > 0) {\r\n            if (this.buildActions(pioneer)) {\r\n                pioneer.say(\"Building!\");\r\n                return;\r\n            }\r\n        }\r\n        if (this.fortifyTargets.length > 0) {\r\n            if (this.fortifyActions(pioneer, this.fortifyTargets)) {\r\n                pioneer.say(\"Fortifying!\");\r\n                return;\r\n            }\r\n        }\r\n        if (this.repairTargets.length > 0) {\r\n            if (this.repairActions(pioneer)) {\r\n                pioneer.say(\"Repairing!\");\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            if (this.upgradeActions(pioneer)) {\r\n                pioneer.say(\"Upgrading!\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    buildActions(worker) {\r\n        let target = worker.pos.findClosestByMultiRoomRange(this.constructionSites);\r\n        if (target) {\r\n            worker.goBuild(target);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    deconstructActions(worker) {\r\n        let target = worker.pos.findClosestByMultiRoomRange(this.deconstructTargets);\r\n        if (target) {\r\n            worker.goDeconstruct(target);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    repairActions(worker) {\r\n        let target = worker.pos.findClosestByMultiRoomRange(this.repairTargets);\r\n        if (target) {\r\n            worker.goRepair(target);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    fortifyActions(worker, targets) {\r\n        if (targets.length == 0) {\r\n            return false;\r\n        }\r\n        let lowTargets;\r\n        let lowestHits = _.min(_.map(targets, r => r.hits));\r\n        lowTargets = _.take(_.filter(targets, r => r.hits <= lowestHits + this.tolerance), 5);\r\n        let target = worker.pos.findClosestByPath(lowTargets);\r\n        if (target) {\r\n            worker.goRepair(target);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    upgradeActions(worker) {\r\n        var _a;\r\n        let target = worker.room.controller;\r\n        if (!(((_a = worker.room.controller.sign) === null || _a === void 0 ? void 0 : _a.text) == config.signature)) {\r\n            worker.goSign(worker.room.controller);\r\n            return true;\r\n        }\r\n        else {\r\n            worker.goUpgrade(target);\r\n            return true;\r\n        }\r\n    }\r\n    init() {\r\n        console.log(this.name, \"REQUESTING SETUP CREEPS FROM \", this.capital.name, \"current: \", this.pioneers.length);\r\n        this.spawnList(2, this.setup);\r\n    }\r\n    run() {\r\n        _.forEach(this.pioneers, r => this.handlePioneer(r));\r\n    }\r\n}\r\n//# sourceMappingURL=SetupManager.js.map","references":["C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/CreepSetup.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/Setups.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Manager.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Managers/ManagerPriority.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/config.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Missions/SettleMission.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Room/Capital.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Missions/SetupMission.ts"],"map":"{\"version\":3,\"file\":\"SetupManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Missions/SetupManager.ts\"],\"names\":[],\"mappings\":\"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\"}"}

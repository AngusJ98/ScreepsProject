{"code":"import { maxBy } from \"Rando_Functions\";\r\nimport { Building } from \"./Building\";\r\nexport class Artillery extends Building {\r\n    constructor(capital, tower) {\r\n        super(capital, tower);\r\n        this.towers = this.capital.towers;\r\n        this.name = \"Artillery_\" + tower.id;\r\n    }\r\n    towerDamageAtPos(pos, ignoreEnergy = false) {\r\n        let room = Game.rooms[pos.roomName];\r\n        if (room) {\r\n            let expectedDamage = 0;\r\n            for (const tower of room.towers) {\r\n                if (tower.energy > 0 || ignoreEnergy) {\r\n                    expectedDamage += this.singleTowerDamage(pos.getRangeTo(tower));\r\n                }\r\n            }\r\n            return expectedDamage;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    singleTowerDamage(range) {\r\n        if (range <= TOWER_OPTIMAL_RANGE) {\r\n            return TOWER_POWER_ATTACK;\r\n        }\r\n        range = Math.min(range, TOWER_FALLOFF_RANGE);\r\n        const falloff = (range - TOWER_OPTIMAL_RANGE) / (TOWER_FALLOFF_RANGE - TOWER_OPTIMAL_RANGE);\r\n        return TOWER_POWER_ATTACK * (1 - TOWER_FALLOFF * falloff);\r\n    }\r\n    attack(target) {\r\n        _.forEach(this.towers, r => r.attack(target));\r\n    }\r\n    init() {\r\n    }\r\n    run() {\r\n        if (this.room.hostiles.length > 0) {\r\n            let target = maxBy(this.room.hostiles, r => this.towerDamageAtPos(r.pos));\r\n            this.attack(target);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Artillery.js.map","references":["C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Rando_Functions.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Room/Capital.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/Building.ts"],"map":"{\"version\":3,\"file\":\"Artillery.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Buildings/Artillery.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AAExC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;AAErC,MAAM,OAAO,SAAU,SAAQ,QAAQ;IAInC,YAAY,OAAgB,EAAE,KAAqB;QAC/C,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;QACjC,IAAI,CAAC,IAAI,GAAG,YAAY,GAAG,KAAK,CAAC,EAAE,CAAA;IACvC,CAAC;IAEO,gBAAgB,CAAC,GAAiB,EAAE,YAAY,GAAG,KAAK;QAC5D,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACzC,IAAI,IAAI,EAAE;YACT,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,EAAE;oBACrC,cAAc,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;iBAChE;aACD;YACD,OAAO,cAAc,CAAC;SACtB;aAAM;YACN,OAAO,CAAC,CAAC;SACT;IACF,CAAC;IAEU,iBAAiB,CAAC,KAAa;QACzC,IAAI,KAAK,IAAI,mBAAmB,EAAE;YACjC,OAAO,kBAAkB,CAAC;SAC1B;QACD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;QAC7C,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,mBAAmB,CAAC,GAAG,CAAC,mBAAmB,GAAG,mBAAmB,CAAC,CAAC;QAC5F,OAAO,kBAAkB,GAAG,CAAC,CAAC,GAAG,aAAa,GAAG,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEU,MAAM,CAAC,MAAa;QACxB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;IACjD,CAAC;IAED,IAAI;IAEJ,CAAC;IAED,GAAG;QACC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;YACzE,IAAI,CAAC,MAAM,CAAC,MAAO,CAAC,CAAA;SAEvB;IACL,CAAC;CAEJ\"}"}

{"code":"import { MiningSite } from \"Buildings/MiningSite\";\r\nimport { UpgradeSite } from \"Buildings/UpgradeSite\";\r\nimport { Roles, Setups } from \"Creep_Setups/Setups\";\r\nimport { Manager } from \"Manager\";\r\nimport { ManagerPriority } from \"./ManagerPriority\";\r\n/**\r\n * This manager handles long range hauls for the capital. For intercapital trading, use a mission instead\r\n * This also moves energy between containers and the storage in reserved rooms\r\n *\r\n * Look at lorrymanagerdeprecated for how bad the code was before, jesus\r\n *\r\n * It's pretty bad now, but at least it works\r\n *\r\n */\r\nexport class LorryManager extends Manager {\r\n    constructor(hq, prio = ManagerPriority.Lorry.lorry) {\r\n        super(hq, \"LorryManager\" + hq.storage.id, prio);\r\n        this.lorryHQ = hq;\r\n        this.lorrys = this.creepsByRole[Roles.lorry] || [];\r\n        this.inputs = this.grabInputs();\r\n        this.outputs = this.grabOutputs();\r\n        this.both = this.inputs.concat(this.outputs);\r\n        this.bunkerStorage = this.lorryHQ.storage;\r\n        this.setup = Setups.lorrys.early;\r\n        this.powerPer = this.setup.getBodyPotential(CARRY, this.capital) * CARRY_CAPACITY;\r\n        this.sites = [];\r\n        this.sites = this.sites.concat(this.capital.miningSites);\r\n        this.sites = this.sites.concat(this.capital.upgradeSite);\r\n        this.sites = _.compact(this.sites);\r\n        this.availableTargets = [];\r\n    }\r\n    grabInputs() {\r\n        let inputsList = [];\r\n        _.forEach(this.capital.miningSites, r => inputsList.push(r.container));\r\n        let newList = _.compact(inputsList);\r\n        return _.sortBy(newList, r => this.getAmount(r));\r\n    }\r\n    grabOutputs() {\r\n        let outputsList = [];\r\n        outputsList.push(this.capital.upgradeSite.container);\r\n        let newList = _.compact(outputsList);\r\n        return _.filter(newList, r => r.energy < r.energyCapacity);\r\n    }\r\n    getAmount(ori) {\r\n        if (ori instanceof StructureContainer) {\r\n            return ori.store.energy;\r\n        }\r\n        else if (ori instanceof Resource) {\r\n            return ori.amount;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    transportersPerSite(site) {\r\n        if (site instanceof UpgradeSite) {\r\n            return Math.ceil(UPGRADE_CONTROLLER_POWER * site.manager.powerNeeded * 2 * PathFinder.search(this.lorryHQ.pos, site.pos).path.length / this.powerPer);\r\n        }\r\n        else {\r\n            return Math.ceil(site.manager.energyPerTick * 2 * PathFinder.search(this.lorryHQ.pos, site.pos).path.length / this.powerPer);\r\n        }\r\n    }\r\n    transportersNeeded() {\r\n        let needed = _.sum(this.sites, r => this.transportersPerSite(r));\r\n        //console.log(\"Needed\" + needed)\r\n        return needed;\r\n    }\r\n    handleLorry(lorry) {\r\n        if (!lorry.memory.targetId && this.availableTargets.length > 0 && lorry.store.energy == 0) {\r\n            let newTarget = this.availableTargets[0];\r\n            lorry.memory.targetId = newTarget.container.id;\r\n            if (newTarget instanceof MiningSite) {\r\n                lorry.memory.state = \"withdraw\";\r\n            }\r\n            else {\r\n                lorry.memory.state = \"transfer\";\r\n            }\r\n            _.remove(this.availableTargets, r => r.container.id == lorry.memory.targetId);\r\n        }\r\n        if (lorry.memory.state == \"withdraw\") {\r\n            if (lorry.store.energy == 0 && lorry.memory.targetId) {\r\n                let potentialTarget = this.capital.buildingsByContainer[lorry.memory.targetId];\r\n                let target = potentialTarget.container ? potentialTarget : undefined;\r\n                if (target) {\r\n                    lorry.goWithdraw(target.container);\r\n                }\r\n                else {\r\n                    lorry.say(\"No container at target site :c\");\r\n                    lorry.memory.targetId = undefined;\r\n                }\r\n            }\r\n            else if (lorry.store.energy > 0) {\r\n                lorry.goTransfer(this.bunkerStorage);\r\n                lorry.memory.targetId = undefined;\r\n            }\r\n            else {\r\n                let drop = lorry.pos.findClosestByRange(lorry.room.droppedEnergy);\r\n                if (drop) {\r\n                    lorry.goWithdraw(drop);\r\n                }\r\n            }\r\n        }\r\n        else if (lorry.memory.state = \"transfer\") {\r\n            if (!lorry.memory.targetId) {\r\n                lorry.memory.state = \"withdraw\";\r\n            }\r\n            if (lorry.store.energy == lorry.store.getCapacity() && lorry.memory.targetId) {\r\n                let potentialTarget = this.capital.buildingsByContainer[lorry.memory.targetId];\r\n                let target = potentialTarget.container ? potentialTarget : undefined;\r\n                if (target) {\r\n                    lorry.goTransfer(target.container);\r\n                }\r\n                else {\r\n                    lorry.say(\"No container at target site :c\");\r\n                    lorry.memory.targetId = undefined;\r\n                    return;\r\n                }\r\n                if (lorry.pos.getRangeTo(target.container.pos) <= 1) {\r\n                    lorry.memory.targetId = undefined;\r\n                }\r\n            }\r\n            else {\r\n                lorry.goWithdraw(this.bunkerStorage);\r\n            }\r\n        }\r\n        else {\r\n            lorry.goTransfer(this.bunkerStorage);\r\n            lorry.memory.state = \"withdraw\";\r\n        }\r\n    }\r\n    init() {\r\n        let setup = Setups.lorrys.early;\r\n        let needed = this.transportersNeeded();\r\n        if (this.lorrys.length == 0) {\r\n            this.spawnList(needed, setup, { priority: ManagerPriority.Capital.firstTransport });\r\n        }\r\n        else {\r\n            this.spawnList(needed, setup);\r\n        }\r\n    }\r\n    run() {\r\n        let targets = _.compact(_.map(this.lorrys, r => r.memory.targetId));\r\n        let targetSites = _.map(targets, r => this.capital.buildingsByContainer[r]);\r\n        for (let site of this.sites) {\r\n            if (!site.container) {\r\n                continue;\r\n            }\r\n            let needed = this.transportersPerSite(site);\r\n            let current = _.filter(targetSites, r => r == site).length;\r\n            if (current < needed) {\r\n                this.availableTargets.push(site);\r\n            }\r\n        }\r\n        _.remove(this.availableTargets, r => (r instanceof MiningSite && r.container.store.getUsedCapacity() < this.powerPer) || (r instanceof UpgradeSite && r.container.store.getFreeCapacity() < this.powerPer));\r\n        _.forEach(this.lorrys, r => this.handleLorry(r));\r\n    }\r\n}\r\n//# sourceMappingURL=LorryManager.js.map","references":["C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/Barracks.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/LorryHQ.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/MiningSite.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Buildings/UpgradeSite.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/CreepSetup.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Creep_Setups/Setups.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Manager.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Rando_Functions.ts","C:/Users/ADMIN BOI/Documents/GitHub/ScreepsProject/src/Managers/ManagerPriority.ts"],"map":"{\"version\":3,\"file\":\"LorryManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/Managers/LorryManager.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAElC,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD;;;;;;;;GAQG;AAEH,MAAM,OAAO,YAAa,SAAQ,OAAO;IAYrC,YAAY,EAAW,EAAE,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC,KAAK;QACvD,KAAK,CAAC,EAAE,EAAE,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAA;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAA;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC;QAClF,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;QACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAY,CAAC,CAAA;QACzD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAClC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAA;IAC9B,CAAC;IAED,UAAU;QACN,IAAI,UAAU,GAA8E,EAAE,CAAC;QAC/F,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAA;QACtE,IAAI,OAAO,GAAkE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAkE,CAAC;QAEpK,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAE,CAAC,CAAC,CAAA;IACrD,CAAC;IAED,WAAW;QACP,IAAI,WAAW,GAA0D,EAAE,CAAC;QAC5E,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAY,CAAC,SAAS,CAAC,CAAA;QACrD,IAAI,OAAO,GAAkE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAkE,CAAA;QACpK,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC,MAAM,GAAG,CAAE,CAAC,cAAc,CAAC,CAAA;IAChE,CAAC;IAED,SAAS,CAAC,GAAyB;QAC/B,IAAI,GAAG,YAAY,kBAAkB,EAAE;YACnC,OAAO,GAAG,CAAC,KAAK,CAAC,MAAM,CAAA;SAC1B;aAAM,IAAI,GAAG,YAAY,QAAQ,EAAE;YAChC,OAAO,GAAG,CAAC,MAAM,CAAA;SACpB;aAAM;YACH,OAAO,CAAC,CAAA;SACX;IACL,CAAC;IAED,mBAAmB,CAAC,IAA8B;QAC9C,IAAI,IAAI,YAAY,WAAW,EAAE;YAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzJ;aAAM;YACH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChI;IACL,CAAC;IAED,kBAAkB;QACd,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAA;QAChE,gCAAgC;QAChC,OAAO,MAAM,CAAA;IACjB,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,IAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACtF,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAA;YACxC,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,SAAU,CAAC,EAAE,CAAC;YAChD,IAAI,SAAS,YAAY,UAAU,EAAE;gBACjC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAA;aAClC;iBAAM;gBACH,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAA;aAClC;YACD,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAU,CAAC,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;SACjF;QAED,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,UAAU,EAAE;YAClC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAClD,IAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;gBAC9E,IAAI,MAAM,GAAG,eAAe,CAAC,SAAS,CAAA,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAA;gBACnE,IAAG,MAAM,EAAE;oBACP,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,SAAU,CAAC,CAAA;iBACtC;qBAAM;oBACH,KAAK,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAA;oBAC3C,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAA;iBACpC;aACJ;iBAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;gBACpC,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC;aACrC;iBAAM;gBACH,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;gBACjE,IAAI,IAAI,EAAE;oBACN,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;iBACzB;aACJ;SACJ;aAAM,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACxB,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAA;aAClC;YAED,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAC1E,IAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;gBAC9E,IAAI,MAAM,GAAG,eAAe,CAAC,SAAS,CAAA,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAA;gBACnE,IAAG,MAAM,EAAE;oBACP,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,SAAU,CAAC,CAAA;iBACtC;qBAAM;oBACH,KAAK,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAA;oBAC3C,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAA;oBACjC,OAAM;iBACT;gBAED,IAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,SAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACjD,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAA;iBACpC;aACJ;iBAAM;gBACH,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;aACvC;SAEJ;aAAM;YACH,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;YACpC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAA;SAClC;IACL,CAAC;IAED,IAAI;QACA,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAA;QAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAA;QAEtC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC,QAAQ,EAAE,eAAe,CAAC,OAAO,CAAC,cAAc,EAAC,CAAC,CAAA;SACpF;aAAM;YACH,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;SAChC;IAIL,CAAC;IAED,GAAG;QACC,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAa,CAAC;QAChF,IAAI,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAA;QAE3E,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,SAAQ;aACX;YACD,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAA;YAC3C,IAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAA;YAC1D,IAAI,OAAO,GAAG,MAAM,EAAE;gBAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACnC;SACJ;QACD,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,UAAU,IAAI,CAAC,CAAC,SAAU,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,WAAW,IAAI,CAAC,CAAC,SAAU,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA;QAC7M,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;CACJ\"}"}
